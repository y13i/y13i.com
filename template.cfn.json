{
  "Parameters": {
    "CICfnRoleArn": {
      "Type": "String"
    },
    "CIGithubConnectionArn": {
      "Type": "String"
    },
    "CIFullRepositoryId": {
      "Type": "String",
      "Description": "GitubUserName/RepoName"
    },
    "CIBranchName": {
      "Type": "String",
      "Default": "main"
    },
    "CISlackChannelId": {
      "Type": "String",
      "Description": "To get the ID, open Slack, right click on the channel name in the left pane, then choose Copy Link. The channel ID is the 9-character string at the end of the URL. For example, ABCBBLZZZ."
    },
    "CISlackWorkspaceId": {
      "Type": "String",
      "Description": "To get the workspace ID, you must perform the initial authorization flow with Slack in the AWS Chatbot console. Then you can copy and paste the workspace ID from the console."
    }
  },
  "Resources": {
    "CIPipelineRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": { "Fn::Sub": "codepipeline.${AWS::URLSuffix}" }
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "ManagedPolicyArns": [{ "Ref": "CIPipelineRolePolicy" }]
      }
    },
    "CIPipelineRolePolicy": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": ["codestar-connections:UseConnection"],
              "Resource": { "Ref": "CIGithubConnectionArn" }
            },
            {
              "Effect": "Allow",
              "Action": [
                "cloudformation:CreateStack",
                "cloudformation:DeleteStack",
                "cloudformation:DescribeStacks",
                "cloudformation:UpdateStack",
                "cloudformation:CreateChangeSet",
                "cloudformation:DeleteChangeSet",
                "cloudformation:DescribeChangeSet",
                "cloudformation:ExecuteChangeSet",
                "cloudformation:SetStackPolicy",
                "cloudformation:ValidateTemplate"
              ],
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": ["s3:*"],
              "Resource": [
                { "Fn::Sub": "${CIArtifactBucket.Arn}" },
                { "Fn::Sub": "${CIArtifactBucket.Arn}/*" },
                { "Fn::Sub": "${AppBucket.Arn}" },
                { "Fn::Sub": "${AppBucket.Arn}/*" }
              ]
            },
            {
              "Effect": "Allow",
              "Action": ["iam:PassRole"],
              "Resource": { "Ref": "CICfnRoleArn" }
            },
            {
              "Effect": "Allow",
              "Action": ["codebuild:StartBuild", "codebuild:BatchGet*"],
              "Resource": { "Fn::GetAtt": ["CIBuildProject", "Arn"] }
            }
          ]
        }
      }
    },
    "CIArtifactBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "LifecycleConfiguration": {
          "Rules": [
            {
              "ExpirationInDays": 1,
              "Status": "Enabled"
            }
          ]
        }
      }
    },
    "CIPipeline": {
      "Type": "AWS::CodePipeline::Pipeline",
      "Properties": {
        "Name": { "Ref": "AWS::StackName" },
        "RoleArn": { "Fn::GetAtt": ["CIPipelineRole", "Arn"] },
        "ArtifactStore": {
          "Type": "S3",
          "Location": { "Ref": "CIArtifactBucket" }
        },
        "Stages": [
          {
            "Name": "Source",
            "Actions": [
              {
                "Name": "GitHub",
                "ActionTypeId": {
                  "Category": "Source",
                  "Owner": "AWS",
                  "Provider": "CodeStarSourceConnection",
                  "Version": "1"
                },
                "Configuration": {
                  "ConnectionArn": {
                    "Ref": "CIGithubConnectionArn"
                  },
                  "FullRepositoryId": {
                    "Ref": "CIFullRepositoryId"
                  },
                  "BranchName": {
                    "Ref": "CIBranchName"
                  }
                },
                "OutputArtifacts": [{ "Name": "appSource" }]
              }
            ]
          },
          {
            "Name": "MetaDeploy",
            "Actions": [
              {
                "Name": "CloudFormation",
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "CloudFormation",
                  "Version": "1"
                },
                "Configuration": {
                  "ActionMode": "CREATE_UPDATE",
                  "Capabilities": "CAPABILITY_IAM",
                  "RoleArn": { "Ref": "CICfnRoleArn" },
                  "StackName": { "Ref": "AWS::StackName" },
                  "TemplatePath": "appSource::template.cfn.json",
                  "ParameterOverrides": {
                    "Fn::Join": [
                      "",
                      [
                        "{",
                        {
                          "Fn::Sub": "\"CICfnRoleArn\": \"${CICfnRoleArn}\""
                        },
                        ",",
                        {
                          "Fn::Sub": "\"CIGithubConnectionArn\": \"${CIGithubConnectionArn}\""
                        },
                        ",",
                        {
                          "Fn::Sub": "\"CIFullRepositoryId\": \"${CIFullRepositoryId}\""
                        },
                        ",",
                        {
                          "Fn::Sub": "\"CIBranchName\": \"${CIBranchName}\""
                        },
                        ",",
                        {
                          "Fn::Sub": "\"CISlackChannelId\": \"${CISlackChannelId}\""
                        },
                        ",",
                        {
                          "Fn::Sub": "\"CISlackWorkspaceId\": \"${CISlackWorkspaceId}\""
                        },
                        "}"
                      ]
                    ]
                  }
                },
                "InputArtifacts": [{ "Name": "appSource" }]
              }
            ]
          },
          {
            "Name": "Build",
            "Actions": [
              {
                "Name": "CodeBuild",
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1"
                },
                "Configuration": {
                  "ProjectName": { "Ref": "CIBuildProject" }
                },
                "InputArtifacts": [{ "Name": "appSource" }],
                "OutputArtifacts": [{ "Name": "builtAssets" }]
              }
            ]
          },
          {
            "Name": "Deploy",
            "Actions": [
              {
                "Name": "S3",
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "S3",
                  "Version": "1"
                },
                "Configuration": {
                  "BucketName": { "Ref": "AppBucket" },
                  "Extract": "true"
                },
                "InputArtifacts": [{ "Name": "builtAssets" }]
              }
            ]
          }
        ]
      }
    },
    "CIPipelineNotificationRule": {
      "Type": "AWS::CodeStarNotifications::NotificationRule",
      "Properties": {
        "Name": { "Ref": "AWS::StackName" },
        "Status": "ENABLED",
        "DetailType": "FULL",
        "Resource": {
          "Fn::Sub": "arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${CIPipeline}"
        },
        "EventTypeIds": [
          "codepipeline-pipeline-action-execution-succeeded",
          "codepipeline-pipeline-action-execution-failed",
          "codepipeline-pipeline-action-execution-canceled",
          "codepipeline-pipeline-action-execution-started",
          "codepipeline-pipeline-stage-execution-started",
          "codepipeline-pipeline-stage-execution-succeeded",
          "codepipeline-pipeline-stage-execution-resumed",
          "codepipeline-pipeline-stage-execution-canceled",
          "codepipeline-pipeline-stage-execution-failed",
          "codepipeline-pipeline-pipeline-execution-failed",
          "codepipeline-pipeline-pipeline-execution-canceled",
          "codepipeline-pipeline-pipeline-execution-started",
          "codepipeline-pipeline-pipeline-execution-resumed",
          "codepipeline-pipeline-pipeline-execution-succeeded",
          "codepipeline-pipeline-pipeline-execution-superseded",
          "codepipeline-pipeline-manual-approval-failed",
          "codepipeline-pipeline-manual-approval-needed",
          "codepipeline-pipeline-manual-approval-succeeded"
        ],
        "Targets": [
          {
            "TargetType": "SNS",
            "TargetAddress": {
              "Ref": "CINotificationTopic"
            }
          }
        ]
      }
    },
    "CINotificationTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "TopicName": { "Ref": "AWS::StackName" }
      }
    },
    "CINotificationTopicPolicy": {
      "Type": "AWS::SNS::TopicPolicy",
      "Properties": {
        "Topics": [
          {
            "Ref": "CINotificationTopic"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": ["codestar-notifications.amazonaws.com"]
              },
              "Action": "sns:Publish",
              "Resource": { "Ref": "CINotificationTopic" }
            }
          ]
        }
      }
    },
    "CIChatbotRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": { "Fn::Sub": "chatbot.${AWS::URLSuffix}" }
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/CloudWatchReadOnlyAccess"
        ]
      }
    },
    "CISlackChannelConfiguration": {
      "Type": "AWS::Chatbot::SlackChannelConfiguration",
      "Properties": {
        "ConfigurationName": { "Ref": "AWS::StackName" },
        "IamRoleArn": { "Fn::GetAtt": ["CIChatbotRole", "Arn"] },
        "SlackChannelId": { "Ref": "CISlackChannelId" },
        "SlackWorkspaceId": { "Ref": "CISlackWorkspaceId" },
        "SnsTopicArns": [{ "Ref": "CINotificationTopic" }]
      }
    },
    "CIBuildProject": {
      "Type": "AWS::CodeBuild::Project",
      "Properties": {
        "Name": { "Ref": "AWS::StackName" },
        "Artifacts": {
          "Type": "CODEPIPELINE"
        },
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:4.0",
          "Type": "LINUX_CONTAINER",
          "PrivilegedMode": true
        },
        "ServiceRole": { "Fn::GetAtt": ["CIBuildRole", "Arn"] },
        "Source": {
          "Type": "CODEPIPELINE"
        },
        "LogsConfig": {
          "CloudWatchLogs": {
            "Status": "ENABLED",
            "GroupName": { "Ref": "CILogGroup" },
            "StreamName": "build"
          }
        }
      }
    },
    "CIBuildRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": { "Fn::Sub": "codebuild.${AWS::URLSuffix}" }
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "ManagedPolicyArns": [{ "Ref": "CIBuildRolePolicy" }]
      }
    },
    "CIBuildRolePolicy": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": ["logs:CreateLogStream", "logs:PutLogEvents"],
              "Resource": { "Fn::GetAtt": ["CILogGroup", "Arn"] }
            },
            {
              "Effect": "Allow",
              "Action": ["s3:GetObject", "s3:PutObject"],
              "Resource": { "Fn::Sub": "${CIArtifactBucket.Arn}/*" }
            }
          ]
        }
      }
    },
    "CILogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": { "RetentionInDays": 365 }
    },
    "AppBucket": {
      "Type": "AWS::S3::Bucket"
    },
    "AppBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "AppBucket"
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "CanonicalUser": {
                  "Fn::Sub": "${AppOriginAccessIdentity.S3CanonicalUserId}"
                }
              },
              "Action": "s3:GetObject",
              "Resource": {
                "Fn::Sub": "${AppBucket.Arn}/*"
              }
            }
          ]
        }
      }
    },
    "AppOriginAccessIdentity": {
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
      "Properties": {
        "CloudFrontOriginAccessIdentityConfig": {
          "Comment": {
            "Ref": "AWS::StackName"
          }
        }
      }
    },
    "AppDistribution": {
      "Type": "AWS::CloudFront::Distribution",
      "Properties": {
        "DistributionConfig": {
          "Enabled": true,
          "DefaultRootObject": "index.html",
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Logging": {
            "Bucket": {
              "Fn::GetAtt": ["AppLoggingBucket", "DomainName"]
            },
            "IncludeCookies": true
          },
          "Comment": {
            "Ref": "AWS::StackName"
          },
          "DefaultCacheBehavior": {
            "TargetOriginId": "AppBucket",
            "ViewerProtocolPolicy": "redirect-to-https",
            "ForwardedValues": {
              "QueryString": false
            }
          },
          "Origins": [
            {
              "Id": "AppBucket",
              "DomainName": {
                "Fn::GetAtt": ["AppBucket", "DomainName"]
              },
              "S3OriginConfig": {
                "OriginAccessIdentity": {
                  "Fn::Sub": "origin-access-identity/cloudfront/${AppOriginAccessIdentity}"
                }
              }
            }
          ],
          "CustomErrorResponses": [
            {
              "ErrorCode": 404,
              "ResponsePagePath": "/404.html",
              "ResponseCode": 404
            }
          ]
        }
      }
    },
    "AppLoggingBucket": {
      "Type": "AWS::S3::Bucket"
    }
  }
}
